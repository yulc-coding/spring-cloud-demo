server:
  port: 9000
  servlet:
    context-path: /auth-server

# 自定义配置
oauth-store:
  # 客户端信息存储方式：memory -> 内存； db -> 数据库
  client: memory
  # token存储方式： redis -> redis存放； jwt -> 使用JWT 生成token
  token: redis

spring:
  application:
    name: auth-server
  datasource:
    url: jdbc:mysql://localhost:3306/oauth2?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&autoReconnect=true
    username: root
    password: root2020!
    driver-class-name: com.mysql.cj.jdbc.Driver
    # Hikari 连接池配置
    hikari:
      # 连接池名称
      pool-name: HikariCP
      # 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      maximum-pool-size: 10
      # 一空闲连接最大存户时间（毫秒），超时则被释放（retired），缺省:10分钟
      idleTimeout: 600000
      # 链接超时（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
      connectionTimeout: 30000
      # 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，
      # 参考MySQL wait_timeout参数（show variables like '%timeout%';）
      maxLifetime: 1800000
      connection-test-query: select 1
  # redis
  redis:
    database: 0
    host: localhost
    port: 6379
    # Redis服务器连接密码（默认为空）
    # password: 123456
    timeout: 3000ms
    lettuce:
      pool:
        max-active: 2
        max-wait: 3000ms
        max-idle: 2
        min-idle: 0

mybatis:
  # 配置实体映射类所在包名
  type-aliases-package: org.ylc.frame.cloud.authserver.entity
  # 配置mapper xml文件所在路径，这里是一个数组
  # classpath 只会到你的class路径中查找找文件;
  # classpath* 不仅包含class路径，还包括jar文件中(class路径)进行查找
  mapper-locations: classpath:/mapper/*.xml
  configuration:
    # 开启驼峰类型的命名规则
    map-underscore-to-camel-case: true

management:
  endpoint:
    health:
      enabled: true